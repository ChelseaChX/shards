[1 2 3] >= .seq                     ;; create local sequence
[4 5 6] >== .seq                    ;; create global sequence with same name

(Get .seq) (Log)                    ;; read local sequence  => [1, 2, 3]
(Get .seq :Global true) (Log)       ;; read global sequence => [4, 5, 6]

;; clear local sequence
(Clear :Name .seq)                  ;; clear local sequence
(Get .seq) (Log)                    ;; local sequence cleared => []  
(Get .seq :Global true) (Log)       ;; same-name global sequence intact => [4, 5, 6]  

100 (AppendTo .seq)                 ;; append something to local sequence
(Get .seq) (Log)                    ;; local sequence no more empty => [100]

;; clear the same-named global sequence
(Clear :Name .seq :Global true )    ;; clear global sequence
(Get .seq :Global true) (Log)       ;; global sequence cleared => []
(Get .seq) (Log)                    ;; local sequence intact => [100]  

name: CI

on:
  push:
    branches:
      - devel
  pull_request:
  workflow_dispatch:

jobs:
  Windows:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        build-type: ["Debug", "Release"]
        bitness: [32bits, 64bits]
        include:
          - bitness: 32bits
            msystem: MINGW32
            arch: i686
            artifact: cbl-win32
          - bitness: 64bits
            msystem: MINGW64
            arch: x86_64
            artifact: cbl-win64
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Set up rust
        env:
          RUSTUP_USE_CURL: 1
        run: |
          rustup toolchain install nightly
          rustup +nightly target add x86_64-pc-windows-gnu
      - name: Set up rust (32-bits)
        env:
          RUSTUP_USE_CURL: 1
        if: ${{ matrix.bitness == '32bits' }}
        shell: bash
        run: |
          rustup +nightly target add ${{ matrix.arch }}-pc-windows-gnu
          # Native libClang required for rust bindgen
          # choco exit with code 1 after successful install
          choco install -y --force llvm || exit 0
          echo "LIBCLANG_PATH=C:\Program Files\LLVM\lib" >> $GITHUB_ENV
      - uses: Swatinem/rust-cache@v1
        if: ${{ github.event_name != 'workflow_dispatch' }}
        with:
          key: ${{ matrix.build-type }}
      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          release: false
          path-type: inherit
          install: >-
            base-devel
            automake
            libtool
            autoconf-wrapper
            mingw-w64-${{ matrix.arch }}-toolchain
            mingw-w64-${{ matrix.arch }}-cmake
            mingw-w64-${{ matrix.arch }}-ninja
            mingw-w64-${{ matrix.arch }}-clang
            mingw-w64-${{ matrix.arch }}-lld
            wget
      - name: Build libtrace (64bits)
        if: ${{ matrix.bitness == '64bits' }}
        shell: msys2 {0}
        run: |
          cd deps/libbacktrace
          mkdir build
          ./configure --prefix=`pwd`/build
          make && make install
      - name: Build
        env:
          RUST_BACKTRACE: 1
        shell: msys2 {0}
        run: |
          ./bootstrap
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DUSE_LIBBACKTRACE=${{ matrix.bitness == '64bits' }} ..
          ninja cbl
      - name: Test runtime (Debug)
        if: ${{ matrix.build-type == 'Debug' }}
        env:
          RUST_BACKTRACE: 1
        shell: msys2 {0}
        run: |
          cd build
          ninja test_runtime
          ./test_runtime
      - name: Test graphics (Debug)
        # NOTE: Graphics backend doesn't run on 32bits
        if: ${{ matrix.build-type == 'Debug' && matrix.bitness == '64bits' }}
        env:
          RUST_BACKTRACE: 1
        shell: msys2 {0}
        run: |
          cd build
          ninja test_gfx
          GFX_TEST_PLATFORM_ID="github-windows" ./test_gfx
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }} ${{ matrix.build-type }}
          path: build/cbl.exe
          if-no-files-found: error
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ matrix.artifact }} rejected test data
          path: src/gfx/tests/data/github-windows/rejected
          if-no-files-found: warn

  #
  # Test chainblocks for Windows
  #
  Windows-test:
    needs: Windows
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        build-type: ["Debug", "Release"]
        bitness: [32bits, 64bits]
        include:
          - bitness: 32bits
            msystem: MINGW32
            arch: i686
            artifact: cbl-win32
          - bitness: 64bits
            msystem: MINGW64
            arch: x86_64
            artifact: cbl-win64
    steps:
      - name: Change git line endings
        run: |
          git config --system core.autocrlf false
          git config --system core.eol lf
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.artifact }} ${{ matrix.build-type }}
          path: build
      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          release: false
          path-type: inherit
      - name: Test
        env:
          RUST_BACKTRACE: 1
        shell: msys2 {0}
        run: |
          cd build
          echo "Running test: general"
          ./cbl ../src/tests/general.edn
          echo "Running test: variables"
          ./cbl ../src/tests/variables.clj
          echo "Running test: linalg"
          ./cbl ../src/tests/linalg.clj
          echo "Running test: loader"
          ./cbl ../src/tests/loader.clj
          echo "Running test: network"
          ./cbl ../src/tests/network.clj
          echo "Running test: struct"
          ./cbl ../src/tests/struct.clj
          echo "Running test: flows"
          ./cbl ../src/tests/flows.clj
          echo "Running test: kdtree"
          ./cbl ../src/tests/kdtree.clj
          echo "Running test: channels"
          ./cbl ../src/tests/channels.clj
          echo "Running test: http"
          ./cbl ../src/tests/http.clj
          echo "Running test: brotli"
          ./cbl ../src/tests/brotli.clj
          echo "Running test: snappy"
          ./cbl ../src/tests/snappy.clj
          # echo "Running test: ws"
          # ./cbl ../src/tests/ws.clj
          echo "Running test: bigint"
          ./cbl ../src/tests/bigint.clj
          echo "Running test: wasm"
          ./cbl ../src/tests/wasm.clj
          echo "Running test: eth"
          ./cbl ../src/tests/eth.edn
          echo "Running test: crypto"
          ./cbl ../src/tests/crypto.edn
      - name: Graphics Test (64bits)
        # NOTE: Graphics backend doesn't run on 32bits
        if: ${{ matrix.bitness == '64bits' }}
        env:
          RUST_BACKTRACE: 1
        shell: msys2 {0}
        run: |
          cd build
          echo "Running test: gfx_window"
          ./cbl ../src/tests/gfx_window.edn
          echo "Running test: gfx_cube"
          ./cbl ../src/tests/gfx_cube.edn
          echo "Running test: gfx_materials"
          ./cbl ../src/tests/gfx_materials.edn
          echo "Running test: imgui_demo"
          ./cbl ../src/tests/imgui_demo.edn
      - name: Test (64bits)
        if: ${{ matrix.bitness == '64bits' }}
        env:
          RUST_BACKTRACE: 1
        shell: msys2 {0}
        run: |
          cd build
          echo "Running test: genetic"
          ./cbl ../src/tests/genetic.clj
          echo "Running test: time"
          ./cbl ../src/tests/time.edn
          echo "Running test: subchains"
          ./cbl ../src/tests/subchains.clj

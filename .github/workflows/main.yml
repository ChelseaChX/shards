name: CI

on:
  push:
    branches:
      - devel
  pull_request:
  workflow_dispatch:

jobs:
  #
  # Build chainblocks for macOS
  #
  macOS:
    runs-on: macos-latest
    strategy:
      matrix:
        build-type: ["Debug", "Release"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Set up dependencies
        run: |
          sudo xcode-select --switch /Applications/Xcode.app
          brew install boost cmake ninja clang-format
          brew install openssl@1.1
          rustup update
      - name: Build
        run: |
          mkdir build
          cd build
          cmake -G Ninja -DSKIP_HEAVY_INLINE=1 -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} ..
          ninja rust_blocks && ninja cbl
      - name: Test runtime (Debug)
        if: ${{ matrix.build-type == 'Debug' }}
        env:
          RUST_BACKTRACE: 1
        run: |
          cd build
          ninja test_runtime
          ./test_runtime
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: cbl-macos ${{ matrix.build-type }}
          path: build/cbl
          if-no-files-found: error

  #
  # Test chainblocks on macOS
  #
  macOS-test:
    needs: macOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        build-type: ["Debug", "Release"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Install boost
        if: ${{ matrix.build-type == 'Debug' }}
        run: |
          brew install boost
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: cbl-macos ${{ matrix.build-type }}
          path: build
      - name: Get sample files
        run: |
          mkdir external && cd external
          wget https://file-examples-com.github.io/uploads/2017/11/file_example_OOG_1MG.ogg
      - name: Test (bgfx)
        if: ${{ always() }}
        env:
          RUST_BACKTRACE: 1
        run: |
          cd build
          chmod +x cbl
          ./cbl ../src/tests/bgfx.clj
      - name: Test (gizmos)
        if: ${{ always() }}
        env:
          RUST_BACKTRACE: 1
        run: |
          cd build
          chmod +x cbl
          ./cbl ../src/tests/gizmos.edn
      - name: Test (imgui_demo)
        if: ${{ always() }}
        env:
          RUST_BACKTRACE: 1
        run: |
          cd build
          chmod +x cbl
          ./cbl ../src/tests/imgui_demo.edn

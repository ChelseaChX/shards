buildAndRun:win:debug:
  script:
    - $currentDir = Get-Location
    - $nimbleDir = "$currentDir/nimbledir"
    - cd src/nim
    - nimble install --depsOnly --nimbleDir:$nimbleDir -y
    - cd $currentDir
    - mkdir build
    - cd build
    - cmake -G Ninja -DNIMBLE_PATH="$nimbleDir/pkgs" -DCMAKE_BUILD_TYPE=Debug ..
    - ninja cbl
    - .\cbl.exe ../src/tests/general.clj
  tags:
    - WIN, NIM, BOOST, MINGW

buildAndRun:win:release:  
  script:
    - $currentDir = Get-Location
    - $nimbleDir = "$currentDir/nimbledir"
    - cd src/nim
    - nimble install --depsOnly --nimbleDir:$nimbleDir -y
    - cd $currentDir
    - mkdir build
    - cd build
    - cmake -G Ninja -DNIMBLE_PATH="$nimbleDir/pkgs" -DCMAKE_BUILD_TYPE=Release ..
    - ninja cbl
    - .\cbl.exe ../src/tests/general.clj
  tags:
    - WIN, NIM, BOOST, MINGW

buildAndRun:linux:debug:
  script:
    # clean up docker - make sure we got space
    - docker rm $(docker ps -q -f status=exited) || true
    - docker volume rm $(docker volume ls -qf dangling=true) || true
    - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
    # build docker image
    - docker build -f docker/linux/Dockerfile -t chainblocks-test --build-arg USER_ID=`id -u` --build-arg GROUP_ID=`id -g` --build-arg JOB_ID=$CI_JOB_ID .
    # run
    - docker run --rm -t --cap-add=SYS_PTRACE -u`id -u`:`id -g` chainblocks-test bash -c "cd src/nim && nimble install --depsOnly -y && cd ../../ && mkdir build && cd build && cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug .. && ninja cbl && gdb -ex 'catch throw' -ex 'break abort' -ex run -ex bt -batch --args ./cbl ../src/tests/general.clj"
  tags:
    - LINUX, DOCKER

buildAndRun:linux:release:
  script:
    # clean up docker - make sure we got space
    - docker rm $(docker ps -q -f status=exited) || true
    - docker volume rm $(docker volume ls -qf dangling=true) || true
    - docker rmi $(docker images --filter "dangling=true" -q --no-trunc) || true
    # build docker image
    - docker build -f docker/linux/Dockerfile -t chainblocks-test --build-arg USER_ID=`id -u` --build-arg GROUP_ID=`id -g` --build-arg JOB_ID=$CI_JOB_ID .
    # run
    - docker run --rm -t --cap-add=SYS_PTRACE -u`id -u`:`id -g` chainblocks-test bash -c "cd src/nim && nimble install --depsOnly -y && cd ../../ && mkdir build && cd build && cmake -G Ninja -DCMAKE_BUILD_TYPE=Release .. && ninja cbl && gdb -ex 'catch throw' -ex 'break abort' -ex run -ex bt -batch --args ./cbl ../src/tests/general.clj && clang++ -c ../src/core/runtime.cpp"
  tags:
    - LINUX, DOCKER

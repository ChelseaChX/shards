(def timestep (/ 1.0 120.0))
(defmesh root)

(defn get-view-transform [time]
  (->
   (Float4 0 0.2 0.2 1.0) >= .arm-pos
   time (Math.AxisAngleY) (Math.Rotation) (Math.MatMul .arm-pos) (ToFloat3) >= .arm-pos-3
   {:Position .arm-pos-3 :Target (Float3 0 0.025 0)} (Math.LookAt)))
(defloop test-wire
  (Setup
   0.0 >= .time

   (GFX.BuiltinFeature :Id BuiltinFeatureId.Transform) >> .features
   (GFX.BuiltinFeature :Id BuiltinFeatureId.BaseColor) >> .features
   (GFX.DrawablePass :Features .features) >> .render-steps

   (GFX.glTF "external/glTF-Sample-Models/2.0/Avocado/glTF-Binary/Avocado.glb") >> .drawables

    ;; Create view
   {:Position (Float3 0 15 10) :Target (Float3 0 0 0)} (Math.LookAt) >= .view-transform
   (GFX.View :View .view-transform) >= .view)
  (GFX.MainWindow
   :Title "SDL Window" :Width 1280 :Height 720 :Debug false
   :Contents
   (->
     ;; Rotate camera
    .time (Math.Add timestep) > .time
    (get-view-transform .time) > .view-transform

    .drawables (GFX.Draw)
    (GFX.Render :Steps .render-steps :View .view))))

(schedule root test-wire)
(run root timestep 100)

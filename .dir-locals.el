((nil 
  (eval . (let ((root (projectile-project-root)))
            (setq-local company-clang-arguments
                        (list
			 "-std=c++17"
			 (concat "-I" root "include")
			 (concat "-I" root "src/core")
			 (concat "-I" root "src/extra")
			 (concat "-I" root "deps/stb")
			 (concat "-I" root "deps/SPSCQueue/include")
			 (concat "-I" root "deps/easyloggingpp/src")
			 (concat "-I" root "deps/nameof/include")
			 (concat "-I" root "deps/magic_enum/include")
			 (concat "-I" root "deps/parallel-hashmap")
			 (concat "-I" root "deps/bgfx/3rdparty")
			 (concat "-I" root "deps/bgfx/include")
			 (concat "-I" root "deps/bx/include")
			 (concat "-I" root "deps/bx/3rdparty")
			 (concat "-I" root "deps/bgfx/include")
			 (concat "-I" root "deps/bgfx/3rdparty")
			 (concat "-I" root "deps/imgui_club/imgui_memory_editor")
			 (concat "-I" root "deps/bgfx/examples/common/imgui")
			 (concat "-I" root "deps/bimg/include")
			 ))
            (setq-local flycheck-clang-include-path
                        (list
			 (concat root "include")
			 (concat root "src/core")
			 (concat root "src/extra")
			 (concat root "deps/stb")
			 (concat root "deps/SPSCQueue/include")
			 (concat root "deps/easyloggingpp/src")
			 (concat root "deps/nameof/include")
			 (concat root "deps/magic_enum/include")
			 (concat root "deps/parallel-hashmap")
			 (concat root "deps/bgfx/3rdparty")
			 (concat root "deps/bgfx/include")
			 (concat root "deps/bx/include")
			 (concat root "deps/bx/3rdparty")
			 (concat root "deps/bgfx/include")
			 (concat root "deps/bgfx/3rdparty")
			 (concat root "deps/imgui_club/imgui_memory_editor")
			 (concat root "deps/bgfx/examples/common/imgui")
			 (concat root "deps/bimg/include")
			 ))))))
